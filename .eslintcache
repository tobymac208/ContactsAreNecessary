[{"/home/nik/repos/ContactsAreNecessary/src/index.js":"1","/home/nik/repos/ContactsAreNecessary/src/components/App.js":"2","/home/nik/repos/ContactsAreNecessary/src/components/Header.js":"3","/home/nik/repos/ContactsAreNecessary/src/components/AddContact.js":"4","/home/nik/repos/ContactsAreNecessary/src/components/ContactList.js":"5","/home/nik/repos/ContactsAreNecessary/src/components/ContactCard.js":"6","/home/nik/repos/ContactsAreNecessary/src/components/ContactDetail.js":"7","/home/nik/repos/ContactsAreNecessary/src/components/EditContact.js":"8","/home/nik/repos/ContactsAreNecessary/src/context/ContactsCrudContext.js":"9","/home/nik/repos/ContactsAreNecessary/src/api/contacts.js":"10"},{"size":208,"mtime":1640761826707,"results":"11","hashOfConfig":"12"},{"size":1024,"mtime":1640761826707,"results":"13","hashOfConfig":"12"},{"size":231,"mtime":1640761826707,"results":"14","hashOfConfig":"12"},{"size":1422,"mtime":1640761826707,"results":"15","hashOfConfig":"12"},{"size":1389,"mtime":1640763484779,"results":"16","hashOfConfig":"12"},{"size":1165,"mtime":1640761826707,"results":"17","hashOfConfig":"12"},{"size":805,"mtime":1640761826707,"results":"18","hashOfConfig":"12"},{"size":1607,"mtime":1640761826707,"results":"19","hashOfConfig":"12"},{"size":2181,"mtime":1640763110041,"results":"20","hashOfConfig":"12"},{"size":99,"mtime":1640761826707,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12o964u",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nik/repos/ContactsAreNecessary/src/index.js",[],"/home/nik/repos/ContactsAreNecessary/src/components/App.js",[],"/home/nik/repos/ContactsAreNecessary/src/components/Header.js",[],"/home/nik/repos/ContactsAreNecessary/src/components/AddContact.js",[],"/home/nik/repos/ContactsAreNecessary/src/components/ContactList.js",["44"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useContactsCrud } from \"../context/ContactsCrudContext\";\nimport ContactCard from \"./ContactCard\";\n\nconst ContactList = (props) => {\n  const { contacts, retrieveContacts, searchHandler, text, searchResults } = useContactsCrud();\n\n  useEffect(() => {\n    retrieveContacts();\n  }, []);\n\n\n  const renderContactList = (text.length < 1 ? contacts : searchResults).map((contact) => {\n    return (\n      <ContactCard\n        contact={contact}\n        key={contact.id}\n      />\n    );\n  });\n\n  const onUserSearch = (e) => {\n    searchHandler(e.target.value);\n  }\n\n  return (\n    <div className=\"main\">\n      <h2>\n        Contact List\n        <Link to=\"/add\">\n          <button className=\"ui button blue right\">Add Contact</button>\n        </Link>\n      </h2>\n      <div className=\"ui search\">\n        <div className=\"ui icon input\">\n          <input\n            type=\"text\"\n            placeholder=\"Search Contacts\"\n            className=\"prompt\"\n            value={text}\n            onChange={(e) => onUserSearch(e)}\n          />\n          <i className=\"search icon\"></i>\n        </div>\n      </div>\n      <div className=\"ui celled list\">\n        {renderContactList.length > 0\n          ? renderContactList\n          : \"No Contacts available\"}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n","/home/nik/repos/ContactsAreNecessary/src/components/ContactCard.js",[],"/home/nik/repos/ContactsAreNecessary/src/components/ContactDetail.js",[],"/home/nik/repos/ContactsAreNecessary/src/components/EditContact.js",[],"/home/nik/repos/ContactsAreNecessary/src/context/ContactsCrudContext.js",["45"],"import { createContext, useContext, useState } from \"react\";\nimport api from \"../api/contacts\";\nimport { v4 as uuid } from \"uuid\";\n\nconst contactsCrudContext = createContext();\n\nexport function ContactsCrudContextProvider({ children }) {\n  const [contacts, setContacts] = useState([]);\n  const [contact, setContact] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  //RetrieveContacts\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) {\n      setContacts(response.data);\n    }\n  };\n\n  const addContactHandler = async (contact) => {\n    const request = {\n      id: uuid(),\n      ...contact,\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n\n  const searchHandler = (searchTerm) => {\n    setText(searchTerm);\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter((contact) => {\n        console.log(contact);\n        return Object.values(contact)\n          .join(\" \")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n\n  const value = {\n    contact,\n    contacts,\n    retrieveContacts,\n    addContactHandler,\n    removeContactHandler,\n    updateContactHandler,\n    searchHandler,\n    text,\n    searchResults\n  }\n\n  return (\n    <contactsCrudContext.Provider value={value}>\n      {children}\n    </contactsCrudContext.Provider>\n  )\n}\n\nexport function useContactsCrud() {\n  return useContext(contactsCrudContext)\n}","/home/nik/repos/ContactsAreNecessary/src/api/contacts.js",[],{"ruleId":"46","severity":1,"message":"47","line":11,"column":6,"nodeType":"48","endLine":11,"endColumn":8,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":9,"column":19,"nodeType":"52","messageId":"53","endLine":9,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveContacts'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-unused-vars","'setContact' is assigned a value but never used.","Identifier","unusedVar",{"desc":"55","fix":"56"},"Update the dependencies array to be: [retrieveContacts]",{"range":"57","text":"58"},[370,372],"[retrieveContacts]"]