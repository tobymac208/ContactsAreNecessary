[{"/home/nikf/Documents/code/ContactsAreNecessary/src/index.js":"1","/home/nikf/Documents/code/ContactsAreNecessary/src/components/App.js":"2","/home/nikf/Documents/code/ContactsAreNecessary/src/components/Header.js":"3","/home/nikf/Documents/code/ContactsAreNecessary/src/components/EditContact.js":"4","/home/nikf/Documents/code/ContactsAreNecessary/src/components/ContactDetail.js":"5","/home/nikf/Documents/code/ContactsAreNecessary/src/components/AddContact.js":"6","/home/nikf/Documents/code/ContactsAreNecessary/src/components/ContactList.js":"7","/home/nikf/Documents/code/ContactsAreNecessary/src/context/ContactsCrudContext.js":"8","/home/nikf/Documents/code/ContactsAreNecessary/src/components/ContactCard.js":"9","/home/nikf/Documents/code/ContactsAreNecessary/src/api/contacts.js":"10"},{"size":208,"mtime":1641093625042,"results":"11","hashOfConfig":"12"},{"size":1024,"mtime":1641093625042,"results":"13","hashOfConfig":"12"},{"size":298,"mtime":1641096099472,"results":"14","hashOfConfig":"12"},{"size":1993,"mtime":1641093625042,"results":"15","hashOfConfig":"12"},{"size":885,"mtime":1641093625042,"results":"16","hashOfConfig":"12"},{"size":1733,"mtime":1641093625042,"results":"17","hashOfConfig":"12"},{"size":1423,"mtime":1641095782405,"results":"18","hashOfConfig":"12"},{"size":2181,"mtime":1641093625042,"results":"19","hashOfConfig":"12"},{"size":1168,"mtime":1641093625042,"results":"20","hashOfConfig":"12"},{"size":99,"mtime":1641094470358,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"iosiq0",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/nikf/Documents/code/ContactsAreNecessary/src/index.js",[],["44","45"],"/home/nikf/Documents/code/ContactsAreNecessary/src/components/App.js",[],"/home/nikf/Documents/code/ContactsAreNecessary/src/components/Header.js",[],"/home/nikf/Documents/code/ContactsAreNecessary/src/components/EditContact.js",[],"/home/nikf/Documents/code/ContactsAreNecessary/src/components/ContactDetail.js",[],"/home/nikf/Documents/code/ContactsAreNecessary/src/components/AddContact.js",[],"/home/nikf/Documents/code/ContactsAreNecessary/src/components/ContactList.js",["46","47"],"/home/nikf/Documents/code/ContactsAreNecessary/src/context/ContactsCrudContext.js",["48"],"import { createContext, useContext, useState } from \"react\";\nimport api from \"../api/contacts\";\nimport { v4 as uuid } from \"uuid\";\n\nconst contactsCrudContext = createContext();\n\nexport function ContactsCrudContextProvider({ children }) {\n  const [contacts, setContacts] = useState([]);\n  const [contact, setContact] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  //RetrieveContacts\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) {\n      setContacts(response.data);\n    }\n  };\n\n  const addContactHandler = async (contact) => {\n    const request = {\n      id: uuid(),\n      ...contact,\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n\n  const searchHandler = (searchTerm) => {\n    setText(searchTerm);\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter((contact) => {\n        console.log(contact);\n        return Object.values(contact)\n          .join(\" \")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n\n  const value = {\n    contact,\n    contacts,\n    retrieveContacts,\n    addContactHandler,\n    removeContactHandler,\n    updateContactHandler,\n    searchHandler,\n    text,\n    searchResults\n  }\n\n  return (\n    <contactsCrudContext.Provider value={value}>\n      {children}\n    </contactsCrudContext.Provider>\n  )\n}\n\nexport function useContactsCrud() {\n  return useContext(contactsCrudContext)\n}","/home/nikf/Documents/code/ContactsAreNecessary/src/components/ContactCard.js",[],"/home/nikf/Documents/code/ContactsAreNecessary/src/api/contacts.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":5,"column":16,"nodeType":"55","messageId":"56","endLine":5,"endColumn":20},{"ruleId":"57","severity":1,"message":"58","line":12,"column":6,"nodeType":"59","endLine":12,"endColumn":8,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"61","line":9,"column":19,"nodeType":"55","messageId":"56","endLine":9,"endColumn":29},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveContacts'. Either include it or remove the dependency array.","ArrayExpression",["64"],"'setContact' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [retrieveContacts]",{"range":"67","text":"68"},[404,406],"[retrieveContacts]"]